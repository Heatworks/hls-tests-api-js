/**
 * HLS - Tests
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2017-06-20T13:31:11Z
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Empty', 'model/Test', 'model/Tests'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/Empty'), require('../model/Test'), require('../model/Tests'));
  } else {
    // Browser globals (root is window)
    if (!root.HlsTests) {
      root.HlsTests = {};
    }
    root.HlsTests.DefaultApi = factory(root.HlsTests.ApiClient, root.HlsTests.Empty, root.HlsTests.Test, root.HlsTests.Tests);
  }
}(this, function(ApiClient, Empty, Test, Tests) {
  'use strict';

  /**
   * Default service.
   * @module api/DefaultApi
   * @version 2017-06-20T13:31:11Z
   */

  /**
   * Constructs a new DefaultApi. 
   * @alias module:api/DefaultApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the testDelete operation.
     * @callback module:api/DefaultApi~testDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Empty} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} opts.name 
     * @param {module:api/DefaultApi~testDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Empty}
     */
    this.testDelete = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'name': opts['name']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oAuth_2_0'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Empty;

      return this.apiClient.callApi(
        '/Test', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the testGet operation.
     * @callback module:api/DefaultApi~testGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Test} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} opts.name 
     * @param {module:api/DefaultApi~testGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Test}
     */
    this.testGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'name': opts['name']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oAuth_2_0'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Test;

      return this.apiClient.callApi(
        '/Test', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the testOptions operation.
     * @callback module:api/DefaultApi~testOptionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Empty} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/DefaultApi~testOptionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Empty}
     */
    this.testOptions = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Empty;

      return this.apiClient.callApi(
        '/Test', 'OPTIONS',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the testPut operation.
     * @callback module:api/DefaultApi~testPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Empty} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/Test} test 
     * @param {module:api/DefaultApi~testPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Empty}
     */
    this.testPut = function(test, callback) {
      var postBody = test;

      // verify the required parameter 'test' is set
      if (test == undefined || test == null) {
        throw new Error("Missing the required parameter 'test' when calling testPut");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oAuth_2_0'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Empty;

      return this.apiClient.callApi(
        '/Test', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the testsGet operation.
     * @callback module:api/DefaultApi~testsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Tests} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} opts.prefix 
     * @param {String} opts.tags 
     * @param {module:api/DefaultApi~testsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Tests}
     */
    this.testsGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'prefix': opts['prefix'],
        'tags': opts['tags']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oAuth_2_0'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Tests;

      return this.apiClient.callApi(
        '/Tests', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the testsOptions operation.
     * @callback module:api/DefaultApi~testsOptionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Empty} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/DefaultApi~testsOptionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Empty}
     */
    this.testsOptions = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Empty;

      return this.apiClient.callApi(
        '/Tests', 'OPTIONS',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
